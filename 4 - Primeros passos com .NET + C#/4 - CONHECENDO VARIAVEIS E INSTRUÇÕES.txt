## CONHECENDO VARIÁVEIS E INSTRUÇÕES

### Tipos e Variáveis:

Variáveis de tipos de valor contêm diretamente seus dados.

As variáveis têm sua própria cópia dos dados e não é possível que as operações afetem outra variável (Exceto no caso das variáveis de parâmetro ref e out)

**Numéricos:** sbyte, short, int, long, byte, ushort, uint, ulong

**Caracteres Unicode:** Char

**Pontos Flutuantes:** float, double, decimal

**Booleano:** boll

enum, struct e tipos nullable (Exemplo int?)



**TIPOS DE REFERÊNCIA**

Variáveis de tipos de referência armazenam referências a seus dados.

É possível que duas variáveis façam referência ao mesmo objeto e, portanto, que operações em uma variável afetem o objeto referenciado pela outra variável.

**Tipos de Classe:** class, object, string

**Tipos de Arrays:** int[], etc.....

interface, delegate



### Instruções:

Ações de um programa são expressas usando instruções

{Um bloco permite que várias instruções sejam escritas em contextos}

**EXEMPLOS:**

- Declaração de variáveis e constantes locais

- IF, SWITCH, WHILE, DO, FOR, FOREACH

- BREAK,CONTINUE, RETURN, THROW, TRY, CATCH, FINALLY, USING

  

### ARRAYS

Um **array** é uma estrutura de dados que contém um número X de elementos, todos do mesmo tipo, que são acessados através de índices computados.

Arrays são tipos de referência e a declaração de uma variável array simplesmente reserva espaço para uma referência de uma instância de array.

Ao criar um array é especificado o tamanho da nova instância, que é fixo durante todo o tempo de vida da instância.

Os índices dos elementos de um array variam de 0 a comprimento do array -1.



